{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/netto-fee/netto-fee.component.ts","webpack:///src/app/components/netto-fee/netto-fee.component.html","webpack:///src/app/repository/insurance-repository.service.ts","webpack:///src/app/services/fee-calculation.service.ts","webpack:///src/app/services/jwt.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","NavBarComponent","value","NettoFeeComponent","insuranceRepositoryService","formBuilder","feeCalculationService","jwt","range","feeForm","group","day","amountOfInsurance","year","month","lengthOfInsurance","numberOfInsured","chargeFrequency","policyDiscount","paymentMethodDiscount","customerDiscount","campaignDiscount","maxNumberOfRelatives","getMaxNumberOfRelatives","datePickerConfig","Object","assign","containerClass","dateInputFormat","seqs","getSeq","campaignDiscountValues","getCampaignDiscountValues","paymentMethodDiscountValues","getPaymentMethodDiscountValues","customerDiscountValues","getCustomerDiscountValues","length","split","console","log","data","calculateFee","subscribe","result","$event","dateString","toISOString","replace","parasztLogin","login","onValueChange","onSubmit","paraszt","InsuranceRepositoryService","seq","name","Array","from","map","x","i","providedIn","API_URL","API_TOKEN","httpOptions","headers","FeeCalculationService","http","feCalcForm","project","buildConfig","version","calculation","params","createWrapper","post","LOGIN_URL","CLIENT_ID","CLIENT_SECRET","CLIENT_CREDITANTIALS","JwtService","httpClient","pipe","res","localStorage","setItem","access_token","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NettoFeeComponent } from './components/netto-fee/netto-fee.component';\n\n\nconst routes: Routes = [\n  {path: '', component: NettoFeeComponent},\n  {path: 'nettoFee', component: NettoFeeComponent},\n  {path: '', redirectTo: 'nettoFee', pathMatch: 'full'},\n  {path: '**', component: NettoFeeComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-frontend';\n}\n","<div>\n  <app-nav-bar></app-nav-bar>\n  <router-outlet></router-outlet>\n</div>\n\n","import { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { NettoFeeComponent } from './components/netto-fee/netto-fee.component';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { JwtModule } from '@auth0/angular-jwt';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    NettoFeeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatInputModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatDatepickerModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    BsDatepickerModule.forRoot(),\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-light\" style=\"background-color: #e3f2fd;\">\n  <a class=\"navbar-brand\" routerLink=\"/nettoFee\">Netto Díj</a>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport contains from '@popperjs/core/lib/dom-utils/contains';\nimport { log } from 'util';\nimport { NetFeeModel } from '../../models/netFee.model';\nimport { ResultModel } from '../../models/result.model';\nimport { InsuranceRepositoryService } from '../../repository/insurance-repository.service';\nimport { FeeCalculationService } from '../../services/fee-calculation.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { JwtService } from '../../services/jwt.service';\n\n@Component({\n  selector: 'app-netto-fee',\n  templateUrl: './netto-fee.component.html',\n  styleUrls: ['./netto-fee.component.css'],\n})\nexport class NettoFeeComponent implements OnInit {\n  feeForm: FormGroup;\n  data: NetFeeModel;\n  result: ResultModel;\n  seqs: any;\n  range: number = 3;\n  datePickerConfig: Partial<BsDatepickerConfig>;\n  maxNumberOfRelatives: number [];\n  split: string[];\n  customerDiscountValues: any[];\n  paymentMethodDiscountValues: any[];\n  campaignDiscountValues: any[];\n\n\n  constructor(private insuranceRepositoryService: InsuranceRepositoryService,\n              private formBuilder: FormBuilder,\n              private feeCalculationService: FeeCalculationService,\n              private jwt: JwtService,\n  ) {\n    this.feeForm = this.formBuilder.group(\n      {\n        day: [],\n        amountOfInsurance: [],\n        year: [],\n        month: [],\n        lengthOfInsurance: [3],\n        numberOfInsured: [null],\n        chargeFrequency: [null],\n        policyDiscount: [],\n        paymentMethodDiscount: [],\n        customerDiscount: [],\n        campaignDiscount: [],\n      },\n    );\n    this.maxNumberOfRelatives = this.insuranceRepositoryService.getMaxNumberOfRelatives();\n    this.datePickerConfig = Object.assign({},\n      {\n        containerClass: 'theme-dark-blue',\n        dateInputFormat: 'YYYY-MM-DD',\n      },\n    );\n    this.seqs = this.insuranceRepositoryService.getSeq();\n    this.campaignDiscountValues = this.insuranceRepositoryService.getCampaignDiscountValues();\n    this.paymentMethodDiscountValues = this.insuranceRepositoryService.getPaymentMethodDiscountValues();\n    this.customerDiscountValues = this.insuranceRepositoryService.getCustomerDiscountValues();\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    this.length();\n    this.feeForm.value.year = this.split[0];\n    this.feeForm.value.month = this.split[1];\n    this.feeForm.value.day = this.split[2];\n    console.log('ez a form:', this.feeForm.value);\n    this.data = {...this.feeForm.value};\n    console.log(this.data);\n    this.feeCalculationService.calculateFee(this.data).subscribe(\n      value => {\n        this.result = value;\n        console.log(value);\n      },\n    );\n  }\n\n  length() {\n    if (this.feeForm.value.lengthOfInsurance) {\n      this.range = this.feeForm.value.lengthOfInsurance;\n    }\n  }\n\n  onValueChange($event: Date) {\n    let dateString = $event.toISOString();\n    let replace = dateString.replace('T', '-');\n    this.split = replace.split('-', 3);\n\n    console.log(this.feeForm.value);\n  }\n\n  paraszt() {\n    this.jwt.parasztLogin().subscribe(\n      value => console.log(value),\n    );\n  }\n\n  nemParaszt() {\n    this.jwt.login().subscribe()\n  }\n}\n\n\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-sm-3 col-md-6 col-lg-5\">\n\n      <div class=\"row justify-content-center pt-5\">\n        <div class=\"col\">\n          <div class=\"card text-white bg-info\">\n            <img class=\"card-img-top\" src=\"assets/formulative.png\">\n\n            <div class=\"card-header text-center\">\n              <h2>Netto Fee Calc</h2>\n            </div>\n\n            <div class=\"card-body\">\n\n              <form [formGroup]=\"feeForm\">\n                <div class=\"row\">\n                  <div class=\"col\">\n\n                    <label for=\"date\">Date of Birth</label>\n                    <div class=\"row\">\n                      <div class=\"col-4 form-group\">\n                        <input type=\"text\"\n                               placeholder=\"Date of Birth\"\n                               class=\"form-control\"\n                               id=\"date\"\n                               (bsValueChange)=\"onValueChange($event)\"\n                               [bsConfig]=\"datePickerConfig\"\n                               bsDatepicker\n                        >\n                      </div>\n\n                      <div class=\"col\" *ngIf=\"this.result?.yearlyFee\">\n                        <input type=\"text\" id=\"result\" class=\"form-control\"\n                               [value]=\"'result: ' + this.result?.yearlyFee\" placeholder=\"result\">\n                      </div>\n\n                    </div>\n\n                    <label for=\"numberOfInsured\">Number of Insured</label>\n                    <div>\n                      <select class=\"custom-select\" name=\"numberOfInsured\" formControlName=\"numberOfInsured\"\n                              id=\"numberOfInsured\">\n                        <option disabled value=null>&#45;&#45; Number of Insured &#45;&#45;</option>\n                        <option *ngFor=\"let numberOfRelatives of this.maxNumberOfRelatives\"\n                                value=\"{{numberOfRelatives}}\">{{numberOfRelatives}}</option>\n                      </select>\n                    </div>\n\n\n                    <label for=\"amountOfInsurance\" class=\"pt-3\">Amount of insurance</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"amountOfInsurance\" id=\"amountOfInsurance\"\n                           placeholder=\"Enter amount\">\n                    <label for=\"lengthOfInsurance\" class=\"pt-1\">Duration</label>\n                    <div class=\"row\">\n\n                      <div class=\"col\">\n                        <div class=\"slidecontainer justify-content-center\">\n                          <input type=\"range\" min=\"3\" max=\"35\" formControlName=\"lengthOfInsurance\"\n                                 class=\"slider\" id=\"myRange\" id=\"lengthOfInsurance\" (change)=\"length()\"\n                                 (mousemove)=\"length()\">\n                        </div>\n                      </div>\n\n                    </div>\n                    <div class=\"row justify-content-center\">\n                      <div class=\"col\">\n                        <span class=\"font-weight-bold indigo-text ml-2 mt-1\">3</span>\n                      </div>\n                      <div class=\"col text-center\">\n                        <span class=\"font-weight-bold indigo-text ml-2 mt-1\">{{this.range}}</span>\n                      </div>\n                      <div class=\"col text-right\">\n                        <span class=\"font-weight-bold indigo-text\">35</span>\n                      </div>\n\n                    </div>\n\n                    <label for=\"policyDiscount\" class=\"pt-3\">Policy discount</label>\n                    <input type=\"number\" class=\"form-control\" formControlName=\"policyDiscount\" id=\"policyDiscount\"\n                           placeholder=\"Enter amount\">\n\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"chargeFrequency\" class=\"pt-3\">Charge frequency</label>\n\n                    <select class=\"custom-select\" name=\"chargeFrequency\" formControlName=\"chargeFrequency\"\n                            id=\"chargeFrequency\">\n                      <option disabled value=null>&#45;&#45; Charge frequency &#45;&#45;</option>\n                      <option *ngFor=\"let seq of this.seqs\" value=\"{{seq.value}}\">{{seq.name}}</option>\n                    </select>\n                    <label for=\"paymentMethodDiscount\" class=\"pt-3\">Payment method</label>\n                    <select class=\"custom-select\" name=\"paymentMethodDiscount\" formControlName=\"paymentMethodDiscount\"\n                            id=\"paymentMethodDiscount\">\n                      <option disabled value=null>&#45;&#45; Payment method &#45;&#45;</option>\n                      <option *ngFor=\"let paymentMethodDiscount of this.paymentMethodDiscountValues\"\n                              value=\"{{paymentMethodDiscount.value}}\">{{paymentMethodDiscount.name}}</option>\n                    </select>\n                    <label for=\"customerDiscount\" class=\"pt-3\">Customer discount</label>\n                    <select class=\"custom-select\" name=\"customerDiscount\" formControlName=\"customerDiscount\"\n                            id=\"customerDiscount\">\n                      <option disabled value=null>&#45;&#45; Customer discount &#45;&#45;</option>\n                      <option *ngFor=\"let customerDiscount of this.customerDiscountValues\"\n                              value=\"{{customerDiscount.value}}\">{{customerDiscount.name}}</option>\n                    </select>\n                    <label for=\"campaignDiscount\" class=\"pt-3\">Campaign discount</label>\n                    <select class=\"custom-select\" name=\"campaignDiscount\" formControlName=\"campaignDiscount\"\n                            id=\"campaignDiscount\">\n                      <option disabled value=null>&#45;&#45; Campaign discount &#45;&#45;</option>\n                      <option *ngFor=\"let campaignDiscount of this.campaignDiscountValues\"\n                              value=\"{{campaignDiscount.value}}\">{{campaignDiscount.name}}</option>\n                    </select>\n                  </div>\n                </div>\n\n              </form>\n\n\n            </div>\n          </div>\n\n          <div class=\"row justify-content-center pt-2 pb-2\">\n            <div class=\"col-4 text-center\">\n              <button type=\"button\" class=\"btn btn-secondary btn-lg btn-block\" (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n        <button class=\"btn-danger\" (click)=\"paraszt()\">Paraszt login</button>\n    </div>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InsuranceRepositoryService {\n  seq: any;\n  customerDiscountValues: any;\n  paymentMethodDiscountValues: any;\n  campaignDiscountValues: any;\n\n  constructor() {\n    this.seq = [\n      {name: 'every year', value: 1},\n      {name: 'every half a year', value: 2},\n      {name: 'quarterly', value: 3},\n      {name: 'per month', value: 4},\n    ];\n    this.customerDiscountValues = [\n      {name: '0 %', value: 1},\n      {name: '10 %', value: 2},\n    ];\n    this.paymentMethodDiscountValues = [\n      {name: 'cash', value: 1},\n      {name: 'bank k&h', value: 2},\n      {name: 'bank', value: 1},\n      {name: 'bank', value: 1},\n    ];\n    this.campaignDiscountValues = [\n      {name: '0 %', value: 1},\n      {name: '10 %', value: 2},\n    ];\n\n  }\n\n  getSeq() {\n    return this.seq;\n  }\n\n  getMaxNumberOfRelatives(): number[] {\n    return Array.from(Array(5)).map((x, i) => i + 1);\n    ;\n  }\n\n  getCustomerDiscountValues(): any [] {\n    return this.campaignDiscountValues;\n  }\n\n  getCampaignDiscountValues(): any [] {\n    return this.campaignDiscountValues;\n  }\n\n  getPaymentMethodDiscountValues(): any[] {\n    return this.paymentMethodDiscountValues;\n  }\n}\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FeeCalcFormDataModel } from '../models/feeCalcFormData.model';\nimport { NetFeeModel } from '../models/netFee.model';\nimport { ResultModel } from '../models/result.model';\n\nconst API_URL = 'https://formulative.io/api/calculate';\nconst API_TOKEN = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik1qVkZNRVJETURkR1FqWXdOVVV6T0RJME1EVkZOakkxTlVGQ1F6QTVRa1EyTXpJeU56WkVNZyJ9.eyJpc3MiOiJodHRwczovL2Zvcm11bGF0aXZlLmV1LmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1ZTZmOTJjNjgwMGI0MjBjNDFkMDYzNzEiLCJhdWQiOlsiZm9ybXVsYXRpdmUtd2ViLWFwaSIsImh0dHBzOi8vZm9ybXVsYXRpdmUuZXUuYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTU4NDg4OTA5MSwiZXhwIjoxNTg0ODk2MjkxLCJhenAiOiJKUmZFcHlCU2hNOVcxUHBOMm0yNTd0U01kSnY5SGlBcyIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUifQ.IuJJBpoZk0ystEhCVdLGBwvBsfC2UdWdwp_moaBWiIcVG2YB_4oABlDvfZSFnGBdO1dB1-iksyXaEGMI9DhgIfbZqBBe9vuOcV1F6i5ImuWQyF8ZCAzU3ByNaoAikKZhuWIK8tmTqlI0AntlS9eoS2AmUZnGQYJYUlZgPtMY_QOOchkp2Mc6_4FzPX2D12RhQsiWbp2JuoCSt0QRC-ayjm6T5nUSwy_vMFY-diKagol1N__sYkAHAEBfLDF6N_VBwG-RKIeJFKlWR5oCNnwTvSYUQ1Ri_yiAe_LRrdqkPVY1heSErcd7sr7-whrvxZZJxkPIKYfKdiA6W4FwrAtc4Q';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'content-Type': 'application/json; charset=utf-8',\n    'authorization': 'Bearer ' + API_TOKEN,\n  }),\n};\n\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeeCalculationService {\n  feCalcForm: FeeCalcFormDataModel;\n  result: ResultModel;\n\n  constructor(private http: HttpClient) { }\n\n  createWrapper(data: NetFeeModel): void {\n    this.feCalcForm = new class implements FeeCalcFormDataModel {\n      project = 'excelFelol';\n      buildConfig = 'default';\n      version = 'draft';\n      calculation = 'yearlyFee.year';\n      params = data;\n    };\n\n  }\n\n  calculateFee(data: NetFeeModel): Observable<ResultModel> {\n    this.createWrapper(data);\n    return this.http.post<ResultModel>(API_URL, this.feCalcForm, httpOptions);\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { ResultModel } from '../models/result.model';\n\nconst LOGIN_URL = 'https://formulative.io/api/oauth/token';\nconst CLIENT_ID = '39a29aab6cd04415c33ef205c1dda77c';\nconst CLIENT_SECRET = 'a7833be6793938b6201168535fa8e5c4e8681cf55bcfc094a384ad07f93cb456';\nconst CLIENT_CREDITANTIALS = 'client_credentials';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'content-Type': 'application/json; charset=utf-8'\n  }),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtService {\n\n  data: any;\n\n  constructor(private httpClient: HttpClient) {\n    this.data = {\n      'grant_type': 'client_credentials',\n      'client_id': '39a29aab6cd04415c33ef205c1dda77c',\n      'client_secret': 'a7833be6793938b6201168535fa8e5c4e8681cf55bcfc094a384ad07f93cb456',\n    };\n  }\n\n\n  parasztLogin(): any {\n    console.log('hello');\n    return this.httpClient.post(LOGIN_URL, this.data, httpOptions);\n  }\n\n\n  login() {\n    return this.httpClient.post<{ access_token: string }>(LOGIN_URL, {CLIENT_CREDITANTIALS, CLIENT_ID, CLIENT_SECRET}).pipe(tap(res => {\n      localStorage.setItem('access_token', res.access_token);\n    }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}